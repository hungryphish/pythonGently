'''this function draws a cube a user defined size.'''

def drawBox(size): #size is width lengh and height
  if size < 1:
    return(none)
  else:
    #top line
    print(' '*(size+1)+'+'+"-"*(size*2)+"+")
    #top and 1/2 side field
    for row in range(size):
      print(' '*(size-row)+"/"+' '*(size*2)+'/'+' '*row+'|')
    #middle line
    print('+'+"-"*(size*2)+"+"+' '*(size)+'+')
    #front and 1/2 side field
    for row in range(size):
      print('|'+' '*(size*2)+'|'+' '*(size-1-row)+'/')
    #bottom line
    print('+'+"-"*(size*2)+"+")

for i in range (1,6):
  drawBox(i)
  
  
  
  '''
  #book solution
  
  def drawBox(size):

    # Special case: Draw nothing if size is less than 1:

    if size < ____:

        return

 

    # Draw back line on top surface:

    print(' ' * (____ + 1) + '+' + '-' * (____ * 2) + '+')

 

    # Draw top surface:

    for i in range(____):

        print(' ' * (____ - i) + '/' + ' ' * (____ * 2) + '/' + ' ' * i + '|')

 

    # Draw top line on top surface:

    print(____ + ____ * (size * 2) + ____ + ' ' * size + '+')

 

    # Draw front surface:

    for i in range(size - 1, ____, ____):

        print(____ + ' ' * (size * ____) + ____ + ' ' * i + ____)

 

    # Draw bottom lie on front surface:

    print(____ + ____ * (size * 2) + ____)

 

# In a loop, call drawBox() with arguments 1 to 5:

for i in range(1, 6):

    drawBox(i)
  '''
