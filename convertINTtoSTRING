'''
Function manually converts an integer into a string
'''


def convertIntToStr(integerNum):
  if integerNum == 0:
    return('0')

  else:
    #function wont work properly if integer is negative. Have to append at end of function.
    if integerNum > 0:
      isNegative = False
    #convets neg to positive.
    else:
      isNegative = True
      integerNum=abs(integerNum)
    #setting an empty string variable.
    stringNum=''
    #creating a dictionary to reference later.
    DIGITS = {0:'0', 1:'1', 2:'2', 3:'3', 4:'4', 5:'5', 6:'6', 7:'7', 8:'8', 9:'9'}
    #Ensures conversion continues until we run out of digits.
    while integerNum != 0:
      #retrieves digit in "ones" place to be used in dictionary
      onesPlaceDigit = integerNum%10
      #Uses the "ones place" dict key to retreive string value and concatnate on to strinngNum Variable.
      stringNum=(DIGITS[onesPlaceDigit]+stringNum)
      #essentially removes the previous ones place.
      integerNum= integerNum//10
    #append '-' if applicable.
    if isNegative == False:
      return(stringNum)
    else:
      return("-"+stringNum)
print(convertIntToStr(-10000))

for i in range(-10000, 10000):
    assert convertIntToStr(i) == str(i)
